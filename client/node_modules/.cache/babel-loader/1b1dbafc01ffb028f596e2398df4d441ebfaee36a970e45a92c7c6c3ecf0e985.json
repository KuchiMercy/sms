{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nconst UseAuthStatus = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingStatus, setCheckingStatus] = useState(true);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true);\n    }\n    setCheckingStatus(false);\n  }, [user]);\n  return {\n    loggedIn,\n    checkingStatus\n  };\n};\n_s(UseAuthStatus, \"GvyLOpeAQPosHbIyqPBjAsJTuHA=\", false, function () {\n  return [useSelector];\n});\n_c = UseAuthStatus;\nexport default UseAuthStatus;\nvar _c;\n$RefreshReg$(_c, \"UseAuthStatus\");","map":{"version":3,"names":["useEffect","useState","useSelector","UseAuthStatus","_s","loggedIn","setLoggedIn","checkingStatus","setCheckingStatus","user","state","auth","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/leadwayPractice/sms/client/src/hooks/UseAuthStatus.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst UseAuthStatus = () => {\n    const [loggedIn, setLoggedIn] = useState(false)\n    const [checkingStatus, setCheckingStatus] = useState(true)\n    const { user } = useSelector((state) => state.auth)\n    useEffect(() => {\n        if (user) {\n            setLoggedIn(true)\n        }\n        setCheckingStatus(false)\n    }, [user])\n    return { loggedIn, checkingStatus }\n\n}\n\nexport default UseAuthStatus"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM;IAAEQ;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnDX,SAAS,CAAC,MAAM;IACZ,IAAIS,IAAI,EAAE;MACNH,WAAW,CAAC,IAAI,CAAC;IACrB;IACAE,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EACV,OAAO;IAAEJ,QAAQ;IAAEE;EAAe,CAAC;AAEvC,CAAC;AAAAH,EAAA,CAZKD,aAAa;EAAA,QAGED,WAAW;AAAA;AAAAU,EAAA,GAH1BT,aAAa;AAcnB,eAAeA,aAAa;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}