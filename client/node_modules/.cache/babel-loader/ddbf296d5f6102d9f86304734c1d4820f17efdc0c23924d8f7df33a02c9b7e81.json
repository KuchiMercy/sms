{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./AuthService\";\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: '',\n  isVerify: false\n};\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  console.log(user);\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const Login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  console.log(user);\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const verifyUser = createAsyncThunk('auth/verifyUser', async (value, thunkAPI) => {\n  console.log(value);\n  try {\n    return await authService.verify(value);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const LogOut = createAsyncThunk('auth/logout', async (value, thunkAPI) => {\n  console.log(value);\n  try {\n    return authService.Logout();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      // state.user = null\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.user = null;\n      state.message = action.payload;\n    }).addCase(verifyUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(verifyUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isVerify = true;\n    }).addCase(verifyUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isVerify = false;\n      state.message = action.payload;\n    }).addCase(Login.pending, state => {\n      state.isLoading = true;\n    }).addCase(Login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(Login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.user = null;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isLoading","isError","isSuccess","message","isVerify","register","thunkAPI","console","log","error","response","data","toString","rejectWithValue","Login","login","verifyUser","value","verify","LogOut","Logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/mercy/Documents/leadwayPractice/sms/client/src/features/auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./AuthService\";\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n    user: user ? user : null,\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: '',\n    isVerify: false\n}\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (user, thunkAPI) => {\n        console.log(user)\n        try {\n            return await authService.register(user)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n\n    }\n)\n\nexport const Login = createAsyncThunk(\n    'auth/login',\n    async (user, thunkAPI) => {\n        console.log(user)\n        try {\n            return await authService.login(user)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const verifyUser = createAsyncThunk(\n    'auth/verifyUser',\n    async (value, thunkAPI) => {\n        console.log(value)\n        try {\n            return await authService.verify(value)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n\n    }\n)\n\nexport const LogOut = createAsyncThunk(\n    'auth/logout',\n    async (value, thunkAPI) => {\n        console.log(value)\n        try {\n            return authService.Logout()\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n\n    }\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false\n            state.isSuccess = false\n            // state.user = null\n            state.isError = false\n            state.message = ''\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(register.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(register.fulfilled,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isSuccess = true\n                    state.user = action.payload\n                }\n            )\n            .addCase(register.rejected,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isError = true\n                    state.user = null\n                    state.message = action.payload\n                }\n            )\n            .addCase(verifyUser.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(verifyUser.fulfilled,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isSuccess = true\n                    state.isVerify = true\n                }\n            )\n            .addCase(verifyUser.rejected,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isError = true\n                    state.isVerify = false\n                    state.message = action.payload\n                }\n            )\n            .addCase(Login.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(Login.fulfilled,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isSuccess = true\n                    state.user = action.payload\n                }\n            )\n            .addCase(Login.rejected,\n                (state, action) => {\n                    state.isLoading = false\n                    state.isError = true\n                    state.user = null\n                    state.message = action.payload\n                }\n            )\n    }\n})\n\nexport const { reset } = authSlice.actions\n\nexport default authSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}